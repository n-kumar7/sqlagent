version: "3.8"

services:
  app:
    build: .
    container_name: my_app
    depends_on:
      - influxdb
      - telegraf
      - grafana
    environment:
      - OPENAI_API_KEY=YOUR_OPENAI_API_KEY
    volumes:
      - ./logs/sql:/app/logs/sql
      - ./logs/runner:/app/logs/runner
    networks:
      - tig_net

  # Optional: containerized Postgres
  # postgres:
  #   image: postgres:13
  #   container_name: postgres
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: pass
  #     POSTGRES_DB: mydb
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #   networks:
  #     - tig_net

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
    networks:
      - tig_net

  telegraf:
    image: telegraf:1.20
    container_name: telegraf
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "8125:8125/udp"
      - "8092:8092/udp"
      - "8094:8094"
    networks:
      - tig_net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - tig_net

volumes:
  influxdb-data:
  grafana-data:
  # pgdata:  # Uncomment if using the Postgres container

networks:
  tig_net:
    driver: bridge
